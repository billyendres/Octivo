{"version":3,"sources":["components/images/img1.png","components/images/img2.png","components/images/img3.png","components/images/img4.png","components/images/octivoImg.png","components/nav/BurgerIcon.js","components/nav/Menu.js","components/nav/Nav.js","components/animationResources/postprocessing/Pass.js","components/animationResources/postprocessing/MaskPass.js","components/animationResources/postprocessing/ShaderPass.js","components/animationResources/shaders/CopyShader.js","components/animationResources/postprocessing/EffectComposer.js","components/animationResources/postprocessing/RenderPass.js","components/animationResources/shaders/WaterShader.js","components/animationResources/postprocessing/WaterPass.js","components/animationResources/shaders/FXAAShader.js","components/HomePage.js","components/Card.js","components/Blog.js","components/Clients.js","components/Footer.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","BurgerIcon","_ref","open","props","Object","objectWithoutProperties","react_default","a","createElement","Fragment","assign","className","src","alt","style","position","top","left","width","key","Menu","close","onClick","contentStyle","background","border","Nav","reactjs_popup_es","modal","overlayStyle","opacity","closeOnDocumentClick","trigger","Pass","this","enabled","needsSwap","clear","renderToScreen","prototype","setSize","height","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","console","error","MaskPass","scene","camera","call","inverse","create","constructor","writeValue","clearValue","context","state","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass","ShaderPass","shader","textureID","undefined","ShaderMaterial","uniforms","material","UniformsUtils","clone","defines","vertexShader","fragmentShader","OrthographicCamera","Scene","quad","Mesh","PlaneBufferGeometry","frustumCulled","add","value","texture","CopyShader","tDiffuse","join","EffectComposer","renderTarget","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getDrawingBufferSize","Vector2","WebGLRenderTarget","name","renderTarget1","renderTarget2","passes","copyPass","_previousFrameTime","Date","now","swapBuffers","tmp","addPass","pass","push","insertPass","index","splice","i","currentRenderTarget","getRenderTarget","il","length","stencilFunc","NOTEQUAL","reset","dispose","RenderPass","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","WaterShader","byp","type","time","factor","resolution","WaterPass","dt_size","Math","max","FXAAShader","apply","resources","colors","random","r","round","scale","rotation","THREE","degToRad","Content","aspect","useThree","viewport","_useSprings","useSprings","objectSpread","from","config","mass","tension","friction","_useSprings2","slicedToArray","springs","set","useEffect","setInterval","delay","map","three","mesh","attach","args","meshPhongMaterial","Effect","composer","useRef","_useThree2","gl","current","useRender","ref","attachArray","material-uniforms-resolution-value","HomePage","dist","intensity","HomePage_Effect","HomePage_Content","CardItems","Hero","Info","cards","card","Card_Card","title","description","Card","children","_useState","useState","_useState2","isHovered","setHovered","_useSpring","useSpring","xys","precision","_useSpring2","animatedProps","setAnimatedProps","web","div","onMouseEnter","onMouseMove","_ref2","clientX","clientY","x","offsetLeft","window","scrollX","pageXOffset","document","body","scrollLeft","offsetTop","scrollY","pageYOffset","scrollTop","clientHeight","clientWidth","onMouseLeave","zIndex","transform","interpolate","y","s","concat","_ref3","Blog","img1","img2","img3","img4","Clients","octivoImg","Footer","App","react","nav_Nav","padding","components_HomePage","components_Card","components_Blog","components_Clients","components_Footer","ReactDOM","components_App","getElementById"],"mappings":"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CA,iFACA,sBACA,4BACA,SACA,iFACA,6BACA,SACA,2CACA,sEACA,mEACA,8DACA,SACA,6EACA,2EACA,SACA,oDACA,wCACA,wCACA,iEACA,gDACA,SACA,iBACA,kBACA,SACA,mCACA,SACA,iFACA,0BACA,SACA,+CACA,6DACA,4EACA,yEACA,iCACA,SACA,iBACA,kBACA,SACA,gCACA,SACA,iFACA,uBACA,SACA,6CACA,6DACA,SACA,wDACA,yEACA,mEACA,SACA,6BACA,SACA,iFACA,iCACA,SACA,iCACA,SACA,gDACA,2CACA,SACA,gCACA,2CACA,aACA,+BACA,2CACA,aACA,gCACA,2CACA,aACA,qCACA,2CACA,aACA,SACA,iFACA,6BACA,SACA,oDACA,4DACA,SACA,6BACA,uCACA,aACA,gCACA,uCACA,aACA,+BACA,uCACA,aACA,iCACA,uCACA,aACA,SACA,GACA,GACA,iFACA,sDACA,iFACA,qEACA,iFACA,8BACA,SACA,oCACA,uEACA,uDACA,mEACA,SACA,iBACA,iFACA,2EACA,iFACA,8CACA,SACA,eACA,iFACA,8EACA,8DACA,gEACA,kEACA,6DACA,SACA,qCACA,SACA,GACA,GACA,iFACA,GACA,oDACA,GACA,iFACA,GACA,iFACA,4DACA,iFACA,kCACA,gCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,GACA,iFACA,yDACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,iFACA,sDACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,GACA,GACA,iFACA,GACA,8CACA,GACA,iFACA,2EACA,4BACA,kCACA,8BACA,8BACA,8BACA,8BACA,6BACA,6BACA,6BACA,6BACA,6BACA,4CACA,gCACA,QACA,4BACA,mCACA,8BACA,gCACA,gCACA,gCACA,4BACA,8BACA,8BACA,8BACA,qCACA,SACA,iFACA,2BACA,kDACA,kEACA,SACA,iFACA,2BACA,mBACA,uBACA,uBACA,iDACA,6DACA,uDACA,wCACA,0EACA,YACA,2EACA,aACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,2BACA,2CACA,qDACA,oEACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,yBACA,8BACA,gCACA,gEACA,4EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,+DACA,wEACA,+DACA,wEACA,SACA,GACA,GACA,iFACA,2DACA,iFACA,gCACA,6DACA,QACA,6DACA,SACA,GACA,GACA,GACA,GACA,iFACA,GACA,kDACA,GACA,iFACA,qBACA,iFACA,8BACA,SACA,oFACA,gCACA,sBACA,SACA,sEACA,oFACA,qCACA,sCACA,oCACA,SACA,8BACA,4DACA,sCACA,iEACA,mBACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,oCACA,+CACA,wCACA,yCACA,sCACA,SACA,oCACA,+CACA,oEACA,mCACA,gCACA,gCACA,wCACA,yCACA,wCACA,yCACA,yCACA,SACA,oCACA,kDACA,+CACA,0CACA,2CACA,0CACA,2CACA,0CACA,SACA,oCACA,+DACA,+CACA,0CACA,2CACA,0CACA,2CACA,6CACA,SACA,oCACA,yDACA,gDACA,0DACA,oCACA,uCACA,8CACA,yEACA,6BACA,iCACA,mCACA,SACA,oCACA,iEACA,gDACA,2EACA,uCACA,+BACA,2BACA,gCACA,qCACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,iFACA,0CACA,2CACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,iEACA,yEACA,4DACA,uCACA,yBACA,qEACA,0CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,6DACA,yEACA,+EACA,+CACA,kEACA,qDACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,+EACA,sDACA,qCACA,+DACA,oDACA,0BACA,oDACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oDACA,yDACA,0EACA,2DACA,iDACA,wCACA,MACA,iFACA,uBACA,sBACA,sBACA,oCACA,kCACA,wDACA,4CACA,wCACA,oBACA,wCACA,qBACA,iBACA,wCACA,4DACA,iFACA,gBACA,4DACA,iFACA,iBACA,kCACA,qCACA,iBACA,iCACA,iCACA,kCACA,kCACA,iCACA,iCACA,YACA,oDACA,wCACA,oCACA,gBACA,oCACA,iBACA,mCACA,8GACA,8GACA,8GACA,8GACA,gBACA,wGACA,wGACA,wGACA,wGACA,iBACA,aACA,iFACA,2CACA,2CACA,4CACA,4CACA,2CACA,2CACA,+CACA,+CACA,sEACA,6CACA,oFACA,oDACA,iFACA,oBACA,kCACA,2BACA,gBACA,4BACA,iBACA,iFACA,oCACA,mCACA,+GACA,+GACA,+GACA,+GACA,gBACA,yGACA,yGACA,yGACA,yGACA,iBACA,YACA,uGACA,uGACA,aACA,iFACA,wCACA,wCACA,4CACA,8CACA,qDACA,qDACA,iFACA,4CACA,4CACA,uDACA,uDACA,iFACA,4CACA,4CACA,qEACA,qEACA,uDACA,uDACA,uDACA,uDACA,iFACA,sDACA,oDACA,gDACA,6DACA,iFACA,mCACA,mCACA,uDACA,0DACA,iFACA,2CACA,2CACA,wCACA,wCACA,yDACA,gEACA,0CACA,kEACA,iFACA,uBACA,uBACA,uBACA,wBACA,2DACA,2DACA,gDACA,gDACA,iFACA,uBACA,mDACA,mDACA,uBACA,mDACA,mDACA,kDACA,4DACA,6CACA,4DACA,iFACA,kCACA,qDACA,+CACA,6CACA,2CACA,iFACA,gCACA,gCACA,wDACA,wDACA,sDACA,sDACA,8CACA,sDACA,sDACA,iFACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,wCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,kEACA,kEACA,iDACA,kEACA,kEACA,iFACA,4CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,sEACA,sEACA,qDACA,sEACA,sEACA,iFACA,gDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,0EACA,0EACA,yDACA,0EACA,0EACA,iFACA,oDACA,uCACA,wFACA,wFACA,6EACA,6EACA,uEACA,uEACA,8EACA,8EACA,6DACA,8EACA,8EACA,iFACA,gCACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,yCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,mEACA,mEACA,iDACA,mEACA,mEACA,iFACA,6CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,uEACA,uEACA,qDACA,uEACA,uEACA,iFACA,iDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,2EACA,2EACA,yDACA,2EACA,2EACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,aACA,iFACA,4BACA,iCACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,iFACA,wCACA,wCACA,4CACA,4CACA,iFACA,4DACA,4CACA,4DACA,gDACA,iFACA,yCACA,uCACA,8DACA,6CACA,8DACA,uDACA,iFACA,gEACA,mEACA,8DACA,8DACA,8BACA,wCACA,YACA,+DACA,aACA,IACA,iFACA,SACA,GACA,gBACA,oCACA,WACA,iBACA,gBACA,gBACA,gBACA,kBACA,iBACA,iBACA,iBACA,YACA,aACA,cACA,WACA,WACA,WACA,gBACA,OACA,GACA,wDACA,iDACA,KACCY,KAAK,aC1iCRkE,YAAMC,GAEN,IACMC,EAAS,CAAC,UAAW,UAAW,UAAW,WAC3CC,EAAS,WACd,IAAMC,EAAIP,KAAKM,SACf,MAAO,C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","file":"static/js/main.f36a3d82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.51c49891.png\";","module.exports = __webpack_public_path__ + \"static/media/img2.2205b6c3.png\";","module.exports = __webpack_public_path__ + \"static/media/img3.c88d682c.png\";","module.exports = __webpack_public_path__ + \"static/media/img4.691b42c6.png\";","module.exports = __webpack_public_path__ + \"static/media/octivoImg.64c046de.png\";","import React from \"react\";\n\nexport default ({ open, ...props }) => (\n\t<>\n\t\t<div className={open ? \"burger-menu open\" : \"burger-menu\"} {...props}>\n\t\t\t<img\n\t\t\t\tsrc=\"https://octivo.io/wp-content/uploads/2018/05/octivo-logo.svg\"\n\t\t\t\talt=\"logo\"\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\ttop: \"2.5rem\",\n\t\t\t\t\tleft: \"0.8rem\",\n\t\t\t\t\twidth: \"15rem\"\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<div className=\"bar1\" key=\"b1\" />\n\t\t\t<div className=\"bar2\" key=\"b2\" />\n\t\t\t<div className=\"bar3\" key=\"b3\" />\n\t\t</div>\n\t</>\n);\n","import React from \"react\";\nimport \"./nav.scss\";\n\nexport default ({ close }) => (\n\t<div className=\"menu\">\n\t\t<ul className=\"menu-style\">\n\t\t\t<li onClick={close}>Home</li>\n\t\t\t<li onClick={close}>Enquire Now</li>\n\t\t\t<li onClick={close}>Octivo Authoring Tool</li>\n\t\t\t<li onClick={close}>Our Story</li>\n\t\t\t<li onClick={close}>Our Work</li>\n\t\t\t<li onClick={close}>Our Media</li>\n\t\t\t<li onClick={close}>Get In Touch</li>\n\t\t</ul>\n\t</div>\n);\n","import React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport BurgerIcon from \"./BurgerIcon\";\nimport Menu from \"./Menu\";\nimport \"./nav.scss\";\n\nconst contentStyle = {\n\tbackground: \"rgba(255,255,255,0)\",\n\twidth: \"80%\",\n\tborder: \"none\"\n};\n\nconst Nav = () => {\n\treturn (\n\t\t<Popup\n\t\t\tmodal\n\t\t\toverlayStyle={{ background: \"rgba(255,255,255,0.98\", opacity: \"0.9\" }}\n\t\t\tcontentStyle={contentStyle}\n\t\t\tcloseOnDocumentClick={false}\n\t\t\ttrigger={open => <BurgerIcon open={open} />}\n\t\t>\n\t\t\t{close => <Menu close={close} />}\n\t\t</Popup>\n\t);\n};\n\nexport default Nav;\n","var Pass = function() {\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen\n\tthis.renderToScreen = false;\n};\n\nObject.assign(Pass.prototype, {\n\tsetSize: function(width, height) {},\n\n\trender: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\t\tconsole.error(\"THREE.Pass: .render() must be implemented in derived pass.\");\n\t}\n});\n\nexport { Pass };\n","import { Pass } from \"./Pass.js\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar MaskPass = function(scene, camera) {\n\tPass.call(this);\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n};\n\nMaskPass.prototype = Object.assign(Object.create(Pass.prototype), {\n\tconstructor: MaskPass,\n\n\trender: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\t\tvar context = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask(false);\n\t\tstate.buffers.depth.setMask(false);\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked(true);\n\t\tstate.buffers.depth.setLocked(true);\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif (this.inverse) {\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\t\t} else {\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\t\t}\n\n\t\tstate.buffers.stencil.setTest(true);\n\t\tstate.buffers.stencil.setOp(\n\t\t\tcontext.REPLACE,\n\t\t\tcontext.REPLACE,\n\t\t\tcontext.REPLACE\n\t\t);\n\t\tstate.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);\n\t\tstate.buffers.stencil.setClear(clearValue);\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget(readBuffer);\n\t\tif (this.clear) renderer.clear();\n\t\trenderer.render(this.scene, this.camera);\n\n\t\trenderer.setRenderTarget(writeBuffer);\n\t\tif (this.clear) renderer.clear();\n\t\trenderer.render(this.scene, this.camera);\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked(false);\n\t\tstate.buffers.depth.setLocked(false);\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff); // draw if == 1\n\t\tstate.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n\t}\n});\n\nvar ClearMaskPass = function() {\n\tPass.call(this);\n\n\tthis.needsSwap = false;\n};\n\nClearMaskPass.prototype = Object.create(Pass.prototype);\n\nObject.assign(ClearMaskPass.prototype, {\n\trender: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\t\trenderer.state.buffers.stencil.setTest(false);\n\t}\n});\n\nexport { ClearMaskPass, MaskPass };\n","import {\n\tMesh,\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tScene,\n\tShaderMaterial,\n\tUniformsUtils\n} from \"three/src/Three\";\nimport { Pass } from \"./Pass.js\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar ShaderPass = function(shader, textureID) {\n\tPass.call(this);\n\n\tthis.textureID = textureID !== undefined ? textureID : \"tDiffuse\";\n\n\tif (shader instanceof ShaderMaterial) {\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\t} else if (shader) {\n\t\tthis.uniforms = UniformsUtils.clone(shader.uniforms);\n\n\t\tthis.material = new ShaderMaterial({\n\t\t\tdefines: Object.assign({}, shader.defines),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\t});\n\t}\n\n\tthis.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\tthis.scene = new Scene();\n\n\tthis.quad = new Mesh(new PlaneBufferGeometry(2, 2), null);\n\tthis.quad.frustumCulled = false; // Avoid getting clipped\n\tthis.scene.add(this.quad);\n};\n\nShaderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n\tconstructor: ShaderPass,\n\n\trender: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\t\tif (this.uniforms[this.textureID]) {\n\t\t\tthis.uniforms[this.textureID].value = readBuffer.texture;\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif (this.renderToScreen) {\n\t\t\trenderer.setRenderTarget(null);\n\t\t\trenderer.render(this.scene, this.camera);\n\t\t} else {\n\t\t\trenderer.setRenderTarget(writeBuffer);\n\t\t\tif (this.clear) renderer.clear();\n\t\t\trenderer.render(this.scene, this.camera);\n\t\t}\n\t}\n});\n\nexport { ShaderPass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nvar CopyShader = {\n\tuniforms: {\n\t\ttDiffuse: { value: null },\n\t\topacity: { value: 1.0 }\n\t},\n\n\tvertexShader: [\n\t\t\"varying vec2 vUv;\",\n\t\t\"void main() {\",\n\t\t\"vUv = uv;\",\n\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\"}\"\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\t\t\"uniform float opacity;\",\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"varying vec2 vUv;\",\n\t\t\"void main() {\",\n\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\"gl_FragColor = opacity * texel;\",\n\t\t\"}\"\n\t].join(\"\\n\")\n};\n\nexport { CopyShader };\n","import { ClearMaskPass, MaskPass } from \"./MaskPass.js\";\nimport { ShaderPass } from \"./ShaderPass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nimport {\n\tLinearFilter,\n\tRGBAFormat,\n\tVector2,\n\tWebGLRenderTarget\n} from \"three/src/Three\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar EffectComposer = function(renderer, renderTarget) {\n\tthis.renderer = renderer;\n\n\tif (renderTarget === undefined) {\n\t\tvar parameters = {\n\t\t\tminFilter: LinearFilter,\n\t\t\tmagFilter: LinearFilter,\n\t\t\tformat: RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getDrawingBufferSize(new Vector2());\n\t\trenderTarget = new WebGLRenderTarget(size.width, size.height, parameters);\n\t\trenderTarget.texture.name = \"EffectComposer.rt1\";\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = \"EffectComposer.rt2\";\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\tthis.passes = [];\n\n\t// dependencies\n\tif (CopyShader === undefined) {\n\t\tconsole.error(\"THREE.EffectComposer relies on THREE.CopyShader\");\n\t}\n\tif (ShaderPass === undefined) {\n\t\tconsole.error(\"THREE.EffectComposer relies on THREE.ShaderPass\");\n\t}\n\tthis.copyPass = new ShaderPass(CopyShader);\n\tthis._previousFrameTime = Date.now();\n};\n\nObject.assign(EffectComposer.prototype, {\n\tswapBuffers: function() {\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\t},\n\n\taddPass: function(pass) {\n\t\tthis.passes.push(pass);\n\t\tvar size = this.renderer.getDrawingBufferSize(new Vector2());\n\t\tpass.setSize(size.width, size.height);\n\t},\n\n\tinsertPass: function(pass, index) {\n\t\tthis.passes.splice(index, 0, pass);\n\t},\n\n\trender: function(deltaTime) {\n\t\t// deltaTime value is in seconds\n\t\tif (deltaTime === undefined) {\n\t\t\tdeltaTime = (Date.now() - this._previousFrameTime) * 0.001;\n\t\t}\n\t\tthis._previousFrameTime = Date.now();\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\t\tvar maskActive = false;\n\t\tvar pass,\n\t\t\ti,\n\t\t\til = this.passes.length;\n\n\t\tfor (i = 0; i < il; i++) {\n\t\t\tpass = this.passes[i];\n\t\t\tif (pass.enabled === false) continue;\n\n\t\t\tpass.render(\n\t\t\t\tthis.renderer,\n\t\t\t\tthis.writeBuffer,\n\t\t\t\tthis.readBuffer,\n\t\t\t\tdeltaTime,\n\t\t\t\tmaskActive\n\t\t\t);\n\t\t\tif (pass.needsSwap) {\n\t\t\t\tif (maskActive) {\n\t\t\t\t\tvar context = this.renderer.context;\n\t\t\t\t\tcontext.stencilFunc(context.NOTEQUAL, 1, 0xffffffff);\n\t\t\t\t\tthis.copyPass.render(\n\t\t\t\t\t\tthis.renderer,\n\t\t\t\t\t\tthis.writeBuffer,\n\t\t\t\t\t\tthis.readBuffer,\n\t\t\t\t\t\tdeltaTime\n\t\t\t\t\t);\n\t\t\t\t\tcontext.stencilFunc(context.EQUAL, 1, 0xffffffff);\n\t\t\t\t}\n\t\t\t\tthis.swapBuffers();\n\t\t\t}\n\t\t\tif (MaskPass !== undefined) {\n\t\t\t\tif (pass instanceof MaskPass) {\n\t\t\t\t\tmaskActive = true;\n\t\t\t\t} else if (pass instanceof ClearMaskPass) {\n\t\t\t\t\tmaskActive = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.renderer.setRenderTarget(currentRenderTarget);\n\t},\n\n\treset: function(renderTarget) {\n\t\tif (renderTarget === undefined) {\n\t\t\tvar size = this.renderer.getDrawingBufferSize(new Vector2());\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize(size.width, size.height);\n\t\t}\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\t},\n\tsetSize: function(width, height) {\n\t\tthis.renderTarget1.setSize(width, height);\n\t\tthis.renderTarget2.setSize(width, height);\n\t\tfor (var i = 0; i < this.passes.length; i++) {\n\t\t\tthis.passes[i].setSize(width, height);\n\t\t}\n\t}\n});\n\nexport { EffectComposer };\n","import { Pass } from \"./Pass.js\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar RenderPass = function(\n\tscene,\n\tcamera,\n\toverrideMaterial,\n\tclearColor,\n\tclearAlpha\n) {\n\tPass.call(this);\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n};\n\nRenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n\tconstructor: RenderPass,\n\n\trender: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif (this.clearColor) {\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor(this.clearColor, this.clearAlpha);\n\t\t}\n\n\t\tif (this.clearDepth) {\n\t\t\trenderer.clearDepth();\n\t\t}\n\n\t\trenderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif (this.clear)\n\t\t\trenderer.clear(\n\t\t\t\trenderer.autoClearColor,\n\t\t\t\trenderer.autoClearDepth,\n\t\t\t\trenderer.autoClearStencil\n\t\t\t);\n\t\trenderer.render(this.scene, this.camera);\n\n\t\tif (this.clearColor) {\n\t\t\trenderer.setClearColor(oldClearColor, oldClearAlpha);\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\t}\n});\n\nexport { RenderPass };\n","/**\n * Simple underwater shader\n * \n \n parameters:\n tDiffuse: texture\n time: this should increase with time passing\n distort_speed: how fast you want the distortion effect of water to proceed\n distortion: to what degree will the shader distort the screen \n centerX: the distortion center X coord\n centerY: the distortion center Y coord\n\n explaination:\n the shader is quite simple\n it chooses a center and start from there make pixels around it to \"swell\" then \"shrink\" then \"swell\"...\n this is of course nothing really similar to underwater scene\n but you can combine several this shaders together to create the effect you need...\n And yes, this shader could be used for something other than underwater effect, for example, magnifier effect :)\n\n * @author vergil Wang\n */\n\nvar WaterShader = {\n\tuniforms: {\n\t\tbyp: { value: 0 }, //apply the glitch ?\n\t\ttexture: { type: \"t\", value: null },\n\t\ttime: { type: \"f\", value: 0.0 },\n\t\tfactor: { type: \"f\", value: 0.0 },\n\t\tresolution: { type: \"v2\", value: null }\n\t},\n\n\tvertexShader: [\n\t\t`varying vec2 vUv;\n    void main(){  \n      vUv = uv; \n      vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_Position = projectionMatrix * modelViewPosition;\n    }`\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\t\t`uniform int byp; //should we apply the glitch ?\n    uniform float time;\n    uniform float factor;\n    uniform vec2 resolution;\n    uniform sampler2D texture;\n    \n    varying vec2 vUv;\n    \n    void main() {  \n      if (byp<1) {\n        vec2 uv1 = vUv;\n        vec2 uv = gl_FragCoord.xy/resolution.xy;\n        float frequency = 6.0 * factor;\n        float amplitude = 0.015 * factor;\n        float x = uv1.y * frequency + time * .7; \n        float y = uv1.x * frequency + time * .3;\n        uv1.x += cos(x+y) * amplitude * cos(y);\n        uv1.y += sin(x-y) * amplitude * cos(y);\n        vec4 rgba = texture2D(texture, uv1);\n        gl_FragColor = rgba;\n      } else {\n        gl_FragColor = texture2D(texture, vUv);\n      }\n    }`\n\t].join(\"\\n\")\n};\n\nexport { WaterShader };\n","import {\n\tMesh,\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tScene,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2\n} from \"three/src/Three\";\nimport { WaterShader } from \"../shaders/WaterShader.js\";\nimport { Pass } from \"./Pass.js\";\n\nvar WaterPass = function(dt_size) {\n\tPass.call(this);\n\tif (WaterShader === undefined)\n\t\tconsole.error(\"THREE.WaterPass relies on THREE.WaterShader\");\n\tvar shader = WaterShader;\n\tthis.uniforms = UniformsUtils.clone(shader.uniforms);\n\tif (dt_size === undefined) dt_size = 64;\n\tthis.uniforms[\"resolution\"].value = new Vector2(dt_size, dt_size);\n\tthis.material = new ShaderMaterial({\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\t});\n\tthis.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\tthis.scene = new Scene();\n\tthis.quad = new Mesh(new PlaneBufferGeometry(2, 2), null);\n\tthis.quad.frustumCulled = false; // Avoid getting clipped\n\tthis.scene.add(this.quad);\n\tthis.factor = 0;\n\tthis.time = 0;\n};\n\nWaterPass.prototype = Object.assign(Object.create(Pass.prototype), {\n\tconstructor: WaterPass,\n\n\trender: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\t\tconst factor = Math.max(0, this.factor);\n\t\tthis.uniforms[\"byp\"].value = factor ? 0 : 1;\n\t\tthis.uniforms[\"texture\"].value = readBuffer.texture;\n\t\tthis.uniforms[\"time\"].value = this.time;\n\t\tthis.uniforms[\"factor\"].value = this.factor;\n\t\tthis.time += 0.05;\n\t\tthis.quad.material = this.material;\n\t\tif (this.renderToScreen) {\n\t\t\trenderer.setRenderTarget(null);\n\t\t\trenderer.render(this.scene, this.camera);\n\t\t} else {\n\t\t\trenderer.setRenderTarget(writeBuffer);\n\t\t\tif (this.clear) renderer.clear();\n\t\t\trenderer.render(this.scene, this.camera);\n\t\t}\n\t}\n});\n\nexport { WaterPass };\n","import { Vector2 } from \"three/src/Three\";\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author davidedc / http://www.sketchpatch.net/\n *\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\n\nvar FXAAShader = {\n\tuniforms: {\n\t\ttDiffuse: { value: null },\n\t\tresolution: { value: new Vector2(1 / 1024, 1 / 512) }\n\t},\n\n\tvertexShader: [\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"vUv = uv;\",\n\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\t\t\"precision highp float;\",\n\t\t\"\",\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"\",\n\t\t\"uniform vec2 resolution;\",\n\t\t\"\",\n\t\t\"varying vec2 vUv;\",\n\t\t\"\",\n\t\t\"#define FXAA_PC 1\",\n\t\t\"#define FXAA_GLSL_100 1\",\n\t\t\"#define FXAA_QUALITY_PRESET 12\",\n\t\t\"\",\n\t\t\"#define FXAA_GREEN_AS_LUMA 1\",\n\t\t\"\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_PC_CONSOLE\",\n\t\t\"    //\",\n\t\t\"    // The console algorithm for PC is included\",\n\t\t\"    // for developers targeting really low spec machines.\",\n\t\t\"    // Likely better to just run FXAA_PC, and use a really low preset.\",\n\t\t\"    //\",\n\t\t\"    #define FXAA_PC_CONSOLE 0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_GLSL_120\",\n\t\t\"    #define FXAA_GLSL_120 0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_GLSL_130\",\n\t\t\"    #define FXAA_GLSL_130 0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_HLSL_3\",\n\t\t\"    #define FXAA_HLSL_3 0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_HLSL_4\",\n\t\t\"    #define FXAA_HLSL_4 0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_HLSL_5\",\n\t\t\"    #define FXAA_HLSL_5 0\",\n\t\t\"#endif\",\n\t\t\"/*==========================================================================*/\",\n\t\t\"#ifndef FXAA_GREEN_AS_LUMA\",\n\t\t\"    //\",\n\t\t\"    // For those using non-linear color,\",\n\t\t\"    // and either not able to get luma in alpha, or not wanting to,\",\n\t\t\"    // this enables FXAA to run using green as a proxy for luma.\",\n\t\t\"    // So with this enabled, no need to pack luma in alpha.\",\n\t\t\"    //\",\n\t\t\"    // This will turn off AA on anything which lacks some amount of green.\",\n\t\t\"    // Pure red and blue or combination of only R and B, will get no AA.\",\n\t\t\"    //\",\n\t\t\"    // Might want to lower the settings for both,\",\n\t\t\"    //    fxaaConsoleEdgeThresholdMin\",\n\t\t\"    //    fxaaQualityEdgeThresholdMin\",\n\t\t\"    // In order to insure AA does not get turned off on colors\",\n\t\t\"    // which contain a minor amount of green.\",\n\t\t\"    //\",\n\t\t\"    // 1 = On.\",\n\t\t\"    // 0 = Off.\",\n\t\t\"    //\",\n\t\t\"    #define FXAA_GREEN_AS_LUMA 0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_EARLY_EXIT\",\n\t\t\"    //\",\n\t\t\"    // Controls algorithm's early exit path.\",\n\t\t\"    // On PS3 turning this ON adds 2 cycles to the shader.\",\n\t\t\"    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\",\n\t\t\"    // Turning this off on console will result in a more blurry image.\",\n\t\t\"    // So this defaults to on.\",\n\t\t\"    //\",\n\t\t\"    // 1 = On.\",\n\t\t\"    // 0 = Off.\",\n\t\t\"    //\",\n\t\t\"    #define FXAA_EARLY_EXIT 1\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_DISCARD\",\n\t\t\"    //\",\n\t\t\"    // Only valid for PC OpenGL currently.\",\n\t\t\"    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\",\n\t\t\"    //\",\n\t\t\"    // 1 = Use discard on pixels which don't need AA.\",\n\t\t\"    //     For APIs which enable concurrent TEX+ROP from same surface.\",\n\t\t\"    // 0 = Return unchanged color on pixels which don't need AA.\",\n\t\t\"    //\",\n\t\t\"    #define FXAA_DISCARD 0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_FAST_PIXEL_OFFSET\",\n\t\t\"    //\",\n\t\t\"    // Used for GLSL 120 only.\",\n\t\t\"    //\",\n\t\t\"    // 1 = GL API supports fast pixel offsets\",\n\t\t\"    // 0 = do not use fast pixel offsets\",\n\t\t\"    //\",\n\t\t\"    #ifdef GL_EXT_gpu_shader4\",\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\n\t\t\"    #endif\",\n\t\t\"    #ifdef GL_NV_gpu_shader5\",\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\n\t\t\"    #endif\",\n\t\t\"    #ifdef GL_ARB_gpu_shader5\",\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\n\t\t\"    #endif\",\n\t\t\"    #ifndef FXAA_FAST_PIXEL_OFFSET\",\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 0\",\n\t\t\"    #endif\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#ifndef FXAA_GATHER4_ALPHA\",\n\t\t\"    //\",\n\t\t\"    // 1 = API supports gather4 on alpha channel.\",\n\t\t\"    // 0 = API does not support gather4 on alpha channel.\",\n\t\t\"    //\",\n\t\t\"    #if (FXAA_HLSL_5 == 1)\",\n\t\t\"        #define FXAA_GATHER4_ALPHA 1\",\n\t\t\"    #endif\",\n\t\t\"    #ifdef GL_ARB_gpu_shader5\",\n\t\t\"        #define FXAA_GATHER4_ALPHA 1\",\n\t\t\"    #endif\",\n\t\t\"    #ifdef GL_NV_gpu_shader5\",\n\t\t\"        #define FXAA_GATHER4_ALPHA 1\",\n\t\t\"    #endif\",\n\t\t\"    #ifndef FXAA_GATHER4_ALPHA\",\n\t\t\"        #define FXAA_GATHER4_ALPHA 0\",\n\t\t\"    #endif\",\n\t\t\"#endif\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"/*============================================================================\",\n\t\t\"                        FXAA QUALITY - TUNING KNOBS\",\n\t\t\"------------------------------------------------------------------------------\",\n\t\t\"NOTE the other tuning knobs are now in the shader function inputs!\",\n\t\t\"============================================================================*/\",\n\t\t\"#ifndef FXAA_QUALITY_PRESET\",\n\t\t\"    //\",\n\t\t\"    // Choose the quality preset.\",\n\t\t\"    // This needs to be compiled into the shader as it effects code.\",\n\t\t\"    // Best option to include multiple presets is to\",\n\t\t\"    // in each shader define the preset, then include this file.\",\n\t\t\"    //\",\n\t\t\"    // OPTIONS\",\n\t\t\"    // -----------------------------------------------------------------------\",\n\t\t\"    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\",\n\t\t\"    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\",\n\t\t\"    // 39       - no dither, very expensive\",\n\t\t\"    //\",\n\t\t\"    // NOTES\",\n\t\t\"    // -----------------------------------------------------------------------\",\n\t\t\"    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\",\n\t\t\"    // 13 = about same speed as FXAA 3.9 and better than 12\",\n\t\t\"    // 23 = closest to FXAA 3.9 visually and performance wise\",\n\t\t\"    //  _ = the lowest digit is directly related to performance\",\n\t\t\"    // _  = the highest digit is directly related to style\",\n\t\t\"    //\",\n\t\t\"    #define FXAA_QUALITY_PRESET 12\",\n\t\t\"#endif\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"/*============================================================================\",\n\t\t\"\",\n\t\t\"                           FXAA QUALITY - PRESETS\",\n\t\t\"\",\n\t\t\"============================================================================*/\",\n\t\t\"\",\n\t\t\"/*============================================================================\",\n\t\t\"                     FXAA QUALITY - MEDIUM DITHER PRESETS\",\n\t\t\"============================================================================*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 10)\",\n\t\t\"    #define FXAA_QUALITY_PS 3\",\n\t\t\"    #define FXAA_QUALITY_P0 1.5\",\n\t\t\"    #define FXAA_QUALITY_P1 3.0\",\n\t\t\"    #define FXAA_QUALITY_P2 12.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 11)\",\n\t\t\"    #define FXAA_QUALITY_PS 4\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 3.0\",\n\t\t\"    #define FXAA_QUALITY_P3 12.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 12)\",\n\t\t\"    #define FXAA_QUALITY_PS 5\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 4.0\",\n\t\t\"    #define FXAA_QUALITY_P4 12.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 13)\",\n\t\t\"    #define FXAA_QUALITY_PS 6\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 4.0\",\n\t\t\"    #define FXAA_QUALITY_P5 12.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 14)\",\n\t\t\"    #define FXAA_QUALITY_PS 7\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\n\t\t\"    #define FXAA_QUALITY_P5 4.0\",\n\t\t\"    #define FXAA_QUALITY_P6 12.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 15)\",\n\t\t\"    #define FXAA_QUALITY_PS 8\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\n\t\t\"    #define FXAA_QUALITY_P6 4.0\",\n\t\t\"    #define FXAA_QUALITY_P7 12.0\",\n\t\t\"#endif\",\n\t\t\"\",\n\t\t\"/*============================================================================\",\n\t\t\"                     FXAA QUALITY - LOW DITHER PRESETS\",\n\t\t\"============================================================================*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 20)\",\n\t\t\"    #define FXAA_QUALITY_PS 3\",\n\t\t\"    #define FXAA_QUALITY_P0 1.5\",\n\t\t\"    #define FXAA_QUALITY_P1 2.0\",\n\t\t\"    #define FXAA_QUALITY_P2 8.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 21)\",\n\t\t\"    #define FXAA_QUALITY_PS 4\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 8.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 22)\",\n\t\t\"    #define FXAA_QUALITY_PS 5\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 8.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 23)\",\n\t\t\"    #define FXAA_QUALITY_PS 6\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\n\t\t\"    #define FXAA_QUALITY_P5 8.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 24)\",\n\t\t\"    #define FXAA_QUALITY_PS 7\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\n\t\t\"    #define FXAA_QUALITY_P5 3.0\",\n\t\t\"    #define FXAA_QUALITY_P6 8.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 25)\",\n\t\t\"    #define FXAA_QUALITY_PS 8\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\n\t\t\"    #define FXAA_QUALITY_P6 4.0\",\n\t\t\"    #define FXAA_QUALITY_P7 8.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 26)\",\n\t\t\"    #define FXAA_QUALITY_PS 9\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\n\t\t\"    #define FXAA_QUALITY_P7 4.0\",\n\t\t\"    #define FXAA_QUALITY_P8 8.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 27)\",\n\t\t\"    #define FXAA_QUALITY_PS 10\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\n\t\t\"    #define FXAA_QUALITY_P8 4.0\",\n\t\t\"    #define FXAA_QUALITY_P9 8.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 28)\",\n\t\t\"    #define FXAA_QUALITY_PS 11\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\n\t\t\"    #define FXAA_QUALITY_P8 2.0\",\n\t\t\"    #define FXAA_QUALITY_P9 4.0\",\n\t\t\"    #define FXAA_QUALITY_P10 8.0\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 29)\",\n\t\t\"    #define FXAA_QUALITY_PS 12\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\n\t\t\"    #define FXAA_QUALITY_P8 2.0\",\n\t\t\"    #define FXAA_QUALITY_P9 2.0\",\n\t\t\"    #define FXAA_QUALITY_P10 4.0\",\n\t\t\"    #define FXAA_QUALITY_P11 8.0\",\n\t\t\"#endif\",\n\t\t\"\",\n\t\t\"/*============================================================================\",\n\t\t\"                     FXAA QUALITY - EXTREME QUALITY\",\n\t\t\"============================================================================*/\",\n\t\t\"#if (FXAA_QUALITY_PRESET == 39)\",\n\t\t\"    #define FXAA_QUALITY_PS 12\",\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\n\t\t\"    #define FXAA_QUALITY_P1 1.0\",\n\t\t\"    #define FXAA_QUALITY_P2 1.0\",\n\t\t\"    #define FXAA_QUALITY_P3 1.0\",\n\t\t\"    #define FXAA_QUALITY_P4 1.0\",\n\t\t\"    #define FXAA_QUALITY_P5 1.5\",\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\n\t\t\"    #define FXAA_QUALITY_P8 2.0\",\n\t\t\"    #define FXAA_QUALITY_P9 2.0\",\n\t\t\"    #define FXAA_QUALITY_P10 4.0\",\n\t\t\"    #define FXAA_QUALITY_P11 8.0\",\n\t\t\"#endif\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"/*============================================================================\",\n\t\t\"\",\n\t\t\"                                API PORTING\",\n\t\t\"\",\n\t\t\"============================================================================*/\",\n\t\t\"#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\",\n\t\t\"    #define FxaaBool bool\",\n\t\t\"    #define FxaaDiscard discard\",\n\t\t\"    #define FxaaFloat float\",\n\t\t\"    #define FxaaFloat2 vec2\",\n\t\t\"    #define FxaaFloat3 vec3\",\n\t\t\"    #define FxaaFloat4 vec4\",\n\t\t\"    #define FxaaHalf float\",\n\t\t\"    #define FxaaHalf2 vec2\",\n\t\t\"    #define FxaaHalf3 vec3\",\n\t\t\"    #define FxaaHalf4 vec4\",\n\t\t\"    #define FxaaInt2 ivec2\",\n\t\t\"    #define FxaaSat(x) clamp(x, 0.0, 1.0)\",\n\t\t\"    #define FxaaTex sampler2D\",\n\t\t\"#else\",\n\t\t\"    #define FxaaBool bool\",\n\t\t\"    #define FxaaDiscard clip(-1)\",\n\t\t\"    #define FxaaFloat float\",\n\t\t\"    #define FxaaFloat2 float2\",\n\t\t\"    #define FxaaFloat3 float3\",\n\t\t\"    #define FxaaFloat4 float4\",\n\t\t\"    #define FxaaHalf half\",\n\t\t\"    #define FxaaHalf2 half2\",\n\t\t\"    #define FxaaHalf3 half3\",\n\t\t\"    #define FxaaHalf4 half4\",\n\t\t\"    #define FxaaSat(x) saturate(x)\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_GLSL_100 == 1)\",\n\t\t\"  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\",\n\t\t\"  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_GLSL_120 == 1)\",\n\t\t\"    // Requires,\",\n\t\t\"    //  #version 120\",\n\t\t\"    // And at least,\",\n\t\t\"    //  #extension GL_EXT_gpu_shader4 : enable\",\n\t\t\"    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\",\n\t\t\"    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\",\n\t\t\"    #if (FXAA_FAST_PIXEL_OFFSET == 1)\",\n\t\t\"        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\",\n\t\t\"    #else\",\n\t\t\"        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\",\n\t\t\"    #endif\",\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 1)\",\n\t\t\"        // use #extension GL_ARB_gpu_shader5 : enable\",\n\t\t\"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\n\t\t\"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\n\t\t\"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\n\t\t\"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\n\t\t\"    #endif\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_GLSL_130 == 1)\",\n\t\t'    // Requires \"#version 130\" or better',\n\t\t\"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\",\n\t\t\"    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\",\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 1)\",\n\t\t\"        // use #extension GL_ARB_gpu_shader5 : enable\",\n\t\t\"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\n\t\t\"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\n\t\t\"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\n\t\t\"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\n\t\t\"    #endif\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_HLSL_3 == 1)\",\n\t\t\"    #define FxaaInt2 float2\",\n\t\t\"    #define FxaaTex sampler2D\",\n\t\t\"    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\",\n\t\t\"    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_HLSL_4 == 1)\",\n\t\t\"    #define FxaaInt2 int2\",\n\t\t\"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\n\t\t\"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\n\t\t\"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\n\t\t\"#endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"#if (FXAA_HLSL_5 == 1)\",\n\t\t\"    #define FxaaInt2 int2\",\n\t\t\"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\n\t\t\"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\n\t\t\"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\n\t\t\"    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\",\n\t\t\"    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\",\n\t\t\"    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\",\n\t\t\"    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\",\n\t\t\"#endif\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"/*============================================================================\",\n\t\t\"                   GREEN AS LUMA OPTION SUPPORT FUNCTION\",\n\t\t\"============================================================================*/\",\n\t\t\"#if (FXAA_GREEN_AS_LUMA == 0)\",\n\t\t\"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\",\n\t\t\"#else\",\n\t\t\"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\",\n\t\t\"#endif\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"/*============================================================================\",\n\t\t\"\",\n\t\t\"                             FXAA3 QUALITY - PC\",\n\t\t\"\",\n\t\t\"============================================================================*/\",\n\t\t\"#if (FXAA_PC == 1)\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"FxaaFloat4 FxaaPixelShader(\",\n\t\t\"    //\",\n\t\t\"    // Use noperspective interpolation here (turn off perspective interpolation).\",\n\t\t\"    // {xy} = center of pixel\",\n\t\t\"    FxaaFloat2 pos,\",\n\t\t\"    //\",\n\t\t\"    // Used only for FXAA Console, and not used on the 360 version.\",\n\t\t\"    // Use noperspective interpolation here (turn off perspective interpolation).\",\n\t\t\"    // {xy_} = upper left of pixel\",\n\t\t\"    // {_zw} = lower right of pixel\",\n\t\t\"    FxaaFloat4 fxaaConsolePosPos,\",\n\t\t\"    //\",\n\t\t\"    // Input color texture.\",\n\t\t\"    // {rgb_} = color in linear or perceptual color space\",\n\t\t\"    // if (FXAA_GREEN_AS_LUMA == 0)\",\n\t\t\"    //     {__a} = luma in perceptual color space (not linear)\",\n\t\t\"    FxaaTex tex,\",\n\t\t\"    //\",\n\t\t\"    // Only used on the optimized 360 version of FXAA Console.\",\n\t\t'    // For everything but 360, just use the same input here as for \"tex\".',\n\t\t\"    // For 360, same texture, just alias with a 2nd sampler.\",\n\t\t\"    // This sampler needs to have an exponent bias of -1.\",\n\t\t\"    FxaaTex fxaaConsole360TexExpBiasNegOne,\",\n\t\t\"    //\",\n\t\t\"    // Only used on the optimized 360 version of FXAA Console.\",\n\t\t'    // For everything but 360, just use the same input here as for \"tex\".',\n\t\t\"    // For 360, same texture, just alias with a 3nd sampler.\",\n\t\t\"    // This sampler needs to have an exponent bias of -2.\",\n\t\t\"    FxaaTex fxaaConsole360TexExpBiasNegTwo,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Quality.\",\n\t\t\"    // This must be from a constant/uniform.\",\n\t\t\"    // {x_} = 1.0/screenWidthInPixels\",\n\t\t\"    // {_y} = 1.0/screenHeightInPixels\",\n\t\t\"    FxaaFloat2 fxaaQualityRcpFrame,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Console.\",\n\t\t\"    // This must be from a constant/uniform.\",\n\t\t\"    // This effects sub-pixel AA quality and inversely sharpness.\",\n\t\t\"    //   Where N ranges between,\",\n\t\t\"    //     N = 0.50 (default)\",\n\t\t\"    //     N = 0.33 (sharper)\",\n\t\t\"    // {x__} = -N/screenWidthInPixels\",\n\t\t\"    // {_y_} = -N/screenHeightInPixels\",\n\t\t\"    // {_z_} =  N/screenWidthInPixels\",\n\t\t\"    // {__w} =  N/screenHeightInPixels\",\n\t\t\"    FxaaFloat4 fxaaConsoleRcpFrameOpt,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Console.\",\n\t\t\"    // Not used on 360, but used on PS3 and PC.\",\n\t\t\"    // This must be from a constant/uniform.\",\n\t\t\"    // {x__} = -2.0/screenWidthInPixels\",\n\t\t\"    // {_y_} = -2.0/screenHeightInPixels\",\n\t\t\"    // {_z_} =  2.0/screenWidthInPixels\",\n\t\t\"    // {__w} =  2.0/screenHeightInPixels\",\n\t\t\"    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Console.\",\n\t\t\"    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\",\n\t\t\"    // This must be from a constant/uniform.\",\n\t\t\"    // {x__} =  8.0/screenWidthInPixels\",\n\t\t\"    // {_y_} =  8.0/screenHeightInPixels\",\n\t\t\"    // {_z_} = -4.0/screenWidthInPixels\",\n\t\t\"    // {__w} = -4.0/screenHeightInPixels\",\n\t\t\"    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Quality.\",\n\t\t\"    // This used to be the FXAA_QUALITY_SUBPIX define.\",\n\t\t\"    // It is here now to allow easier tuning.\",\n\t\t\"    // Choose the amount of sub-pixel aliasing removal.\",\n\t\t\"    // This can effect sharpness.\",\n\t\t\"    //   1.00 - upper limit (softer)\",\n\t\t\"    //   0.75 - default amount of filtering\",\n\t\t\"    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\",\n\t\t\"    //   0.25 - almost off\",\n\t\t\"    //   0.00 - completely off\",\n\t\t\"    FxaaFloat fxaaQualitySubpix,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Quality.\",\n\t\t\"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\",\n\t\t\"    // It is here now to allow easier tuning.\",\n\t\t\"    // The minimum amount of local contrast required to apply algorithm.\",\n\t\t\"    //   0.333 - too little (faster)\",\n\t\t\"    //   0.250 - low quality\",\n\t\t\"    //   0.166 - default\",\n\t\t\"    //   0.125 - high quality\",\n\t\t\"    //   0.063 - overkill (slower)\",\n\t\t\"    FxaaFloat fxaaQualityEdgeThreshold,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Quality.\",\n\t\t\"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\",\n\t\t\"    // It is here now to allow easier tuning.\",\n\t\t\"    // Trims the algorithm from processing darks.\",\n\t\t\"    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\",\n\t\t\"    //   0.0625 - high quality (faster)\",\n\t\t\"    //   0.0312 - visible limit (slower)\",\n\t\t\"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\n\t\t\"    //   Likely want to set this to zero.\",\n\t\t\"    //   As colors that are mostly not-green\",\n\t\t\"    //   will appear very dark in the green channel!\",\n\t\t\"    //   Tune by looking at mostly non-green content,\",\n\t\t\"    //   then start at zero and increase until aliasing is a problem.\",\n\t\t\"    FxaaFloat fxaaQualityEdgeThresholdMin,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Console.\",\n\t\t\"    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\",\n\t\t\"    // It is here now to allow easier tuning.\",\n\t\t\"    // This does not effect PS3, as this needs to be compiled in.\",\n\t\t\"    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\",\n\t\t\"    //   Due to the PS3 being ALU bound,\",\n\t\t\"    //   there are only three safe values here: 2 and 4 and 8.\",\n\t\t\"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\n\t\t\"    // For all other platforms can be a non-power of two.\",\n\t\t\"    //   8.0 is sharper (default!!!)\",\n\t\t\"    //   4.0 is softer\",\n\t\t\"    //   2.0 is really soft (good only for vector graphics inputs)\",\n\t\t\"    FxaaFloat fxaaConsoleEdgeSharpness,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Console.\",\n\t\t\"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\",\n\t\t\"    // It is here now to allow easier tuning.\",\n\t\t\"    // This does not effect PS3, as this needs to be compiled in.\",\n\t\t\"    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\",\n\t\t\"    //   Due to the PS3 being ALU bound,\",\n\t\t\"    //   there are only two safe values here: 1/4 and 1/8.\",\n\t\t\"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\n\t\t\"    // The console setting has a different mapping than the quality setting.\",\n\t\t\"    // Other platforms can use other values.\",\n\t\t\"    //   0.125 leaves less aliasing, but is softer (default!!!)\",\n\t\t\"    //   0.25 leaves more aliasing, and is sharper\",\n\t\t\"    FxaaFloat fxaaConsoleEdgeThreshold,\",\n\t\t\"    //\",\n\t\t\"    // Only used on FXAA Console.\",\n\t\t\"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\",\n\t\t\"    // It is here now to allow easier tuning.\",\n\t\t\"    // Trims the algorithm from processing darks.\",\n\t\t\"    // The console setting has a different mapping than the quality setting.\",\n\t\t\"    // This only applies when FXAA_EARLY_EXIT is 1.\",\n\t\t\"    // This does not apply to PS3,\",\n\t\t\"    // PS3 was simplified to avoid more shader instructions.\",\n\t\t\"    //   0.06 - faster but more aliasing in darks\",\n\t\t\"    //   0.05 - default\",\n\t\t\"    //   0.04 - slower and less aliasing in darks\",\n\t\t\"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\n\t\t\"    //   Likely want to set this to zero.\",\n\t\t\"    //   As colors that are mostly not-green\",\n\t\t\"    //   will appear very dark in the green channel!\",\n\t\t\"    //   Tune by looking at mostly non-green content,\",\n\t\t\"    //   then start at zero and increase until aliasing is a problem.\",\n\t\t\"    FxaaFloat fxaaConsoleEdgeThresholdMin,\",\n\t\t\"    //\",\n\t\t\"    // Extra constants for 360 FXAA Console only.\",\n\t\t\"    // Use zeros or anything else for other platforms.\",\n\t\t\"    // These must be in physical constant registers and NOT immediates.\",\n\t\t\"    // Immediates will result in compiler un-optimizing.\",\n\t\t\"    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\",\n\t\t\"    FxaaFloat4 fxaaConsole360ConstDir\",\n\t\t\") {\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat2 posM;\",\n\t\t\"    posM.x = pos.x;\",\n\t\t\"    posM.y = pos.y;\",\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 1)\",\n\t\t\"        #if (FXAA_DISCARD == 0)\",\n\t\t\"            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\n\t\t\"            #if (FXAA_GREEN_AS_LUMA == 0)\",\n\t\t\"                #define lumaM rgbyM.w\",\n\t\t\"            #else\",\n\t\t\"                #define lumaM rgbyM.y\",\n\t\t\"            #endif\",\n\t\t\"        #endif\",\n\t\t\"        #if (FXAA_GREEN_AS_LUMA == 0)\",\n\t\t\"            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\",\n\t\t\"            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\",\n\t\t\"        #else\",\n\t\t\"            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\",\n\t\t\"            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\",\n\t\t\"        #endif\",\n\t\t\"        #if (FXAA_DISCARD == 1)\",\n\t\t\"            #define lumaM luma4A.w\",\n\t\t\"        #endif\",\n\t\t\"        #define lumaE luma4A.z\",\n\t\t\"        #define lumaS luma4A.x\",\n\t\t\"        #define lumaSE luma4A.y\",\n\t\t\"        #define lumaNW luma4B.w\",\n\t\t\"        #define lumaN luma4B.z\",\n\t\t\"        #define lumaW luma4B.x\",\n\t\t\"    #else\",\n\t\t\"        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\n\t\t\"        #if (FXAA_GREEN_AS_LUMA == 0)\",\n\t\t\"            #define lumaM rgbyM.w\",\n\t\t\"        #else\",\n\t\t\"            #define lumaM rgbyM.y\",\n\t\t\"        #endif\",\n\t\t\"        #if (FXAA_GLSL_100 == 1)\",\n\t\t\"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\",\n\t\t\"        #else\",\n\t\t\"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\",\n\t\t\"        #endif\",\n\t\t\"    #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat maxSM = max(lumaS, lumaM);\",\n\t\t\"    FxaaFloat minSM = min(lumaS, lumaM);\",\n\t\t\"    FxaaFloat maxESM = max(lumaE, maxSM);\",\n\t\t\"    FxaaFloat minESM = min(lumaE, minSM);\",\n\t\t\"    FxaaFloat maxWN = max(lumaN, lumaW);\",\n\t\t\"    FxaaFloat minWN = min(lumaN, lumaW);\",\n\t\t\"    FxaaFloat rangeMax = max(maxWN, maxESM);\",\n\t\t\"    FxaaFloat rangeMin = min(minWN, minESM);\",\n\t\t\"    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\",\n\t\t\"    FxaaFloat range = rangeMax - rangeMin;\",\n\t\t\"    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\",\n\t\t\"    FxaaBool earlyExit = range < rangeMaxClamped;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    if(earlyExit)\",\n\t\t\"        #if (FXAA_DISCARD == 1)\",\n\t\t\"            FxaaDiscard;\",\n\t\t\"        #else\",\n\t\t\"            return rgbyM;\",\n\t\t\"        #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 0)\",\n\t\t\"        #if (FXAA_GLSL_100 == 1)\",\n\t\t\"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\",\n\t\t\"        #else\",\n\t\t\"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\",\n\t\t\"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\n\t\t\"        #endif\",\n\t\t\"    #else\",\n\t\t\"        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\",\n\t\t\"        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\n\t\t\"    #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat lumaNS = lumaN + lumaS;\",\n\t\t\"    FxaaFloat lumaWE = lumaW + lumaE;\",\n\t\t\"    FxaaFloat subpixRcpRange = 1.0/range;\",\n\t\t\"    FxaaFloat subpixNSWE = lumaNS + lumaWE;\",\n\t\t\"    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\",\n\t\t\"    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat lumaNESE = lumaNE + lumaSE;\",\n\t\t\"    FxaaFloat lumaNWNE = lumaNW + lumaNE;\",\n\t\t\"    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\",\n\t\t\"    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat lumaNWSW = lumaNW + lumaSW;\",\n\t\t\"    FxaaFloat lumaSWSE = lumaSW + lumaSE;\",\n\t\t\"    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\",\n\t\t\"    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\",\n\t\t\"    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\",\n\t\t\"    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\",\n\t\t\"    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\",\n\t\t\"    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\",\n\t\t\"    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\",\n\t\t\"    FxaaBool horzSpan = edgeHorz >= edgeVert;\",\n\t\t\"    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    if(!horzSpan) lumaN = lumaW;\",\n\t\t\"    if(!horzSpan) lumaS = lumaE;\",\n\t\t\"    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\",\n\t\t\"    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat gradientN = lumaN - lumaM;\",\n\t\t\"    FxaaFloat gradientS = lumaS - lumaM;\",\n\t\t\"    FxaaFloat lumaNN = lumaN + lumaM;\",\n\t\t\"    FxaaFloat lumaSS = lumaS + lumaM;\",\n\t\t\"    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\",\n\t\t\"    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\",\n\t\t\"    if(pairN) lengthSign = -lengthSign;\",\n\t\t\"    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat2 posB;\",\n\t\t\"    posB.x = posM.x;\",\n\t\t\"    posB.y = posM.y;\",\n\t\t\"    FxaaFloat2 offNP;\",\n\t\t\"    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\",\n\t\t\"    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\",\n\t\t\"    if(!horzSpan) posB.x += lengthSign * 0.5;\",\n\t\t\"    if( horzSpan) posB.y += lengthSign * 0.5;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat2 posN;\",\n\t\t\"    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\",\n\t\t\"    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\",\n\t\t\"    FxaaFloat2 posP;\",\n\t\t\"    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\",\n\t\t\"    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\",\n\t\t\"    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\",\n\t\t\"    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\",\n\t\t\"    FxaaFloat subpixE = subpixC * subpixC;\",\n\t\t\"    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    if(!pairN) lumaNN = lumaSS;\",\n\t\t\"    FxaaFloat gradientScaled = gradient * 1.0/4.0;\",\n\t\t\"    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\",\n\t\t\"    FxaaFloat subpixF = subpixD * subpixE;\",\n\t\t\"    FxaaBool lumaMLTZero = lumaMM < 0.0;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    lumaEndN -= lumaNN * 0.5;\",\n\t\t\"    lumaEndP -= lumaNN * 0.5;\",\n\t\t\"    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\",\n\t\t\"    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\",\n\t\t\"    FxaaBool doneNP = (!doneN) || (!doneP);\",\n\t\t\"    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\",\n\t\t\"    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    if(doneNP) {\",\n\t\t\"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"        doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"        doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\",\n\t\t\"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\",\n\t\t\"        doneNP = (!doneN) || (!doneP);\",\n\t\t\"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\",\n\t\t\"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"        #if (FXAA_QUALITY_PS > 3)\",\n\t\t\"        if(doneNP) {\",\n\t\t\"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"            doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"            doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\",\n\t\t\"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\",\n\t\t\"            doneNP = (!doneN) || (!doneP);\",\n\t\t\"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\",\n\t\t\"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"            #if (FXAA_QUALITY_PS > 4)\",\n\t\t\"            if(doneNP) {\",\n\t\t\"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"                doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"                doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\",\n\t\t\"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\",\n\t\t\"                doneNP = (!doneN) || (!doneP);\",\n\t\t\"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\",\n\t\t\"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                #if (FXAA_QUALITY_PS > 5)\",\n\t\t\"                if(doneNP) {\",\n\t\t\"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"                    doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"                    doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\",\n\t\t\"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\",\n\t\t\"                    doneNP = (!doneN) || (!doneP);\",\n\t\t\"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\",\n\t\t\"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                    #if (FXAA_QUALITY_PS > 6)\",\n\t\t\"                    if(doneNP) {\",\n\t\t\"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"                        doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"                        doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\",\n\t\t\"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\",\n\t\t\"                        doneNP = (!doneN) || (!doneP);\",\n\t\t\"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\",\n\t\t\"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                        #if (FXAA_QUALITY_PS > 7)\",\n\t\t\"                        if(doneNP) {\",\n\t\t\"                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"                            doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"                            doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\",\n\t\t\"                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\",\n\t\t\"                            doneNP = (!doneN) || (!doneP);\",\n\t\t\"                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\",\n\t\t\"                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    #if (FXAA_QUALITY_PS > 8)\",\n\t\t\"    if(doneNP) {\",\n\t\t\"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"        doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"        doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\",\n\t\t\"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\",\n\t\t\"        doneNP = (!doneN) || (!doneP);\",\n\t\t\"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\",\n\t\t\"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"        #if (FXAA_QUALITY_PS > 9)\",\n\t\t\"        if(doneNP) {\",\n\t\t\"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"            doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"            doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\",\n\t\t\"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\",\n\t\t\"            doneNP = (!doneN) || (!doneP);\",\n\t\t\"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\",\n\t\t\"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"            #if (FXAA_QUALITY_PS > 10)\",\n\t\t\"            if(doneNP) {\",\n\t\t\"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"                doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"                doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\",\n\t\t\"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\",\n\t\t\"                doneNP = (!doneN) || (!doneP);\",\n\t\t\"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\",\n\t\t\"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                #if (FXAA_QUALITY_PS > 11)\",\n\t\t\"                if(doneNP) {\",\n\t\t\"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"                    doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"                    doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\",\n\t\t\"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\",\n\t\t\"                    doneNP = (!doneN) || (!doneP);\",\n\t\t\"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\",\n\t\t\"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                    #if (FXAA_QUALITY_PS > 12)\",\n\t\t\"                    if(doneNP) {\",\n\t\t\"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n\t\t\"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n\t\t\"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n\t\t\"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n\t\t\"                        doneN = abs(lumaEndN) >= gradientScaled;\",\n\t\t\"                        doneP = abs(lumaEndP) >= gradientScaled;\",\n\t\t\"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\",\n\t\t\"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\",\n\t\t\"                        doneNP = (!doneN) || (!doneP);\",\n\t\t\"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\",\n\t\t\"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                    }\",\n\t\t\"                    #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                }\",\n\t\t\"                #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"            }\",\n\t\t\"            #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"        }\",\n\t\t\"        #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    }\",\n\t\t\"    #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                        }\",\n\t\t\"                        #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                    }\",\n\t\t\"                    #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"                }\",\n\t\t\"                #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"            }\",\n\t\t\"            #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"        }\",\n\t\t\"        #endif\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    }\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat dstN = posM.x - posN.x;\",\n\t\t\"    FxaaFloat dstP = posP.x - posM.x;\",\n\t\t\"    if(!horzSpan) dstN = posM.y - posN.y;\",\n\t\t\"    if(!horzSpan) dstP = posP.y - posM.y;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\",\n\t\t\"    FxaaFloat spanLength = (dstP + dstN);\",\n\t\t\"    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\",\n\t\t\"    FxaaFloat spanLengthRcp = 1.0/spanLength;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaBool directionN = dstN < dstP;\",\n\t\t\"    FxaaFloat dst = min(dstN, dstP);\",\n\t\t\"    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\",\n\t\t\"    FxaaFloat subpixG = subpixF * subpixF;\",\n\t\t\"    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\",\n\t\t\"    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\",\n\t\t\"/*--------------------------------------------------------------------------*/\",\n\t\t\"    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\",\n\t\t\"    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\",\n\t\t\"    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\",\n\t\t\"    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\",\n\t\t\"    #if (FXAA_DISCARD == 1)\",\n\t\t\"        return FxaaTexTop(tex, posM);\",\n\t\t\"    #else\",\n\t\t\"        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\",\n\t\t\"    #endif\",\n\t\t\"}\",\n\t\t\"/*==========================================================================*/\",\n\t\t\"#endif\",\n\t\t\"\",\n\t\t\"void main() {\",\n\t\t\"  gl_FragColor = FxaaPixelShader(\",\n\t\t\"    vUv,\",\n\t\t\"    vec4(0.0),\",\n\t\t\"    tDiffuse,\",\n\t\t\"    tDiffuse,\",\n\t\t\"    tDiffuse,\",\n\t\t\"    resolution,\",\n\t\t\"    vec4(0.0),\",\n\t\t\"    vec4(0.0),\",\n\t\t\"    vec4(0.0),\",\n\t\t\"    0.75,\",\n\t\t\"    0.166,\",\n\t\t\"    0.0833,\",\n\t\t\"    0.0,\",\n\t\t\"    0.0,\",\n\t\t\"    0.0,\",\n\t\t\"    vec4(0.0)\",\n\t\t\"  );\",\n\t\t\"\",\n\t\t\"  // TODO avoid querying texture twice for same texel\",\n\t\t\"  gl_FragColor.a = texture2D(tDiffuse, vUv).a;\",\n\t\t\"}\"\n\t].join(\"\\n\")\n};\n\nexport { FXAAShader };\n","import * as THREE from \"three\";\nimport React, { useRef, useEffect } from \"react\";\nimport { apply, Canvas, useRender, useThree } from \"react-three-fiber\";\nimport { useSprings, a } from \"@react-spring/three\";\nimport * as resources from \"./animationResources/index\";\nimport \"../styles/HomePage.scss\";\napply(resources);\n\nconst number = 30;\nconst colors = [\"#A2CCB6\", \"#FCEEB5\", \"#EE786E\", \"#e0feff\"];\nconst random = () => {\n\tconst r = Math.random();\n\treturn {\n\t\tposition: [30 - Math.random() * 60, 30 - Math.random() * 60, 0],\n\t\tcolor: colors[Math.round(Math.random() * (colors.length - 1))],\n\t\tscale: [1 + r * 10, 1 + r * 10, 1],\n\t\trotation: [0, 0, THREE.Math.degToRad(Math.round(Math.random()) * 45)]\n\t};\n};\n\nconst Content = () => {\n\tconst { viewport } = useThree();\n\tconst aspect = viewport.width / 6;\n\tconst [springs, set] = useSprings(number, i => ({\n\t\tfrom: random(),\n\t\t...random(),\n\t\tconfig: { mass: 20, tension: 500, friction: 200 }\n\t}));\n\tuseEffect(\n\t\t() =>\n\t\t\tvoid setInterval(() => set(i => ({ ...random(), delay: i * 50 })), 4000),\n\t\t[]\n\t);\n\treturn springs.map(({ color, ...props }, index) => (\n\t\t<a.mesh key={index} {...props}>\n\t\t\t<planeBufferGeometry\n\t\t\t\tattach=\"geometry\"\n\t\t\t\targs={[0.1 + Math.random() * aspect, 0.1 + Math.random() * aspect]}\n\t\t\t/>\n\t\t\t<a.meshPhongMaterial attach=\"material\" color={color} />\n\t\t</a.mesh>\n\t));\n};\n\nconst Effect = () => {\n\tconst composer = useRef();\n\tconst { scene, gl, size, camera } = useThree();\n\tuseEffect(() => void composer.current.setSize(size.width, size.height), [\n\t\tsize\n\t]);\n\tuseRender(() => composer.current.render(), true);\n\treturn (\n\t\t<effectComposer ref={composer} args={[gl]}>\n\t\t\t<renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n\t\t\t<waterPass attachArray=\"passes\" factor={1} />\n\t\t\t<shaderPass\n\t\t\t\tattachArray=\"passes\"\n\t\t\t\targs={[resources.FXAAShader]}\n\t\t\t\tmaterial-uniforms-resolution-value={[1 / size.width, 1 / size.height]}\n\t\t\t\trenderToScreen\n\t\t\t/>\n\t\t</effectComposer>\n\t);\n};\n\nconst HomePage = () => {\n\treturn (\n\t\t<div style={{ color: \"#172717\", height: \"100vh\" }}>\n\t\t\t<Canvas style={{ background: \"#A2CCB6\" }} camera={{ position: [0, 0, 30] }}>\n\t\t\t\t<ambientLight intensity={0.5} />\n\t\t\t\t<spotLight intensity={0.5} position={[300, 300, 4000]} />\n\t\t\t\t<Effect />\n\t\t\t\t<Content />\n\t\t\t</Canvas>\n\t\t\t<div className=\"headers\">\n\t\t\t\t<div className=\"header-small\">WE MAKE YOUR DESIGNS....</div>\n\t\t\t\t<div className=\"header-major\">\n\t\t\t\t\t<span>Beautiful, Useable & Fun</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HomePage;\n","import React, { useState, useRef } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"../styles/Card.scss\";\n\nconst CardItems = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Hero>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<Info />\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t{cards.map((card, i) => (\n\t\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<div className=\"card-title\">{card.title}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">{card.description}</div>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Hero>\n\t\t</div>\n\t);\n};\n\nexport default CardItems;\n\nfunction Card({ children }) {\n\t// We add this ref to card element and use in onMouseMove event ...\n\t// ... to get element's offset and dimensions.\n\tconst ref = useRef();\n\n\t// Keep track of whether card is hovered so we can increment ...\n\t// ... zIndex to ensure it shows up above other cards when animation causes overlap.\n\tconst [isHovered, setHovered] = useState(false);\n\n\tconst [animatedProps, setAnimatedProps] = useSpring({\n\t\t// Array containing [rotateX, rotateY, and scale] values.\n\t\t// We store under a single key (xys) instead of separate keys ...\n\t\t// ... so that we can use animatedProps.xys.interpolate() to ...\n\t\t// ... easily generate the css transform value below.\n\t\txys: [0, 0, 1],\n\t\t// Setup physics\n\t\tconfig: { mass: 10, tension: 400, friction: 30, precision: 0.00001 }\n\t});\n\n\treturn (\n\t\t<animated.div\n\t\t\tref={ref}\n\t\t\tclassName=\"card\"\n\t\t\tonMouseEnter={() => setHovered(true)}\n\t\t\tonMouseMove={({ clientX, clientY }) => {\n\t\t\t\t// Get mouse x position within card\n\t\t\t\tconst x =\n\t\t\t\t\tclientX -\n\t\t\t\t\t(ref.current.offsetLeft -\n\t\t\t\t\t\t(window.scrollX || window.pageXOffset || document.body.scrollLeft));\n\n\t\t\t\t// Get mouse y position within card\n\t\t\t\tconst y =\n\t\t\t\t\tclientY -\n\t\t\t\t\t(ref.current.offsetTop -\n\t\t\t\t\t\t(window.scrollY || window.pageYOffset || document.body.scrollTop));\n\n\t\t\t\t// Set animated values based on mouse position and card dimensions\n\t\t\t\tconst dampen = 50; // Lower the number the less rotation\n\t\t\t\tconst xys = [\n\t\t\t\t\t-(y - ref.current.clientHeight / 2) / dampen, // rotateX\n\t\t\t\t\t(x - ref.current.clientWidth / 2) / dampen, // rotateY\n\t\t\t\t\t1.07 // Scale\n\t\t\t\t];\n\n\t\t\t\t// Update values to animate to\n\t\t\t\tsetAnimatedProps({ xys: xys });\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetHovered(false);\n\t\t\t\t// Set xys back to original\n\t\t\t\tsetAnimatedProps({ xys: [0, 0, 1] });\n\t\t\t}}\n\t\t\tstyle={{\n\t\t\t\t// If hovered we want it to overlap other cards when it scales up\n\t\t\t\tzIndex: isHovered ? 2 : 1,\n\t\t\t\t// Interpolate function to handle css changes\n\t\t\t\ttransform: animatedProps.xys.interpolate(\n\t\t\t\t\t(x, y, s) =>\n\t\t\t\t\t\t`perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\t\t\t\t)\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</animated.div>\n\t);\n}\n\nfunction Hero({ children }) {\n\treturn (\n\t\t<div className=\"hero\">\n\t\t\t<div>{children}</div>\n\t\t</div>\n\t);\n}\n\nfunction Info() {\n\treturn (\n\t\t<div className=\"info-box\">\n\t\t\t<div className=\"info\">\n\t\t\t\tGET IN TOUCH!\n\t\t\t\t<br />\n\t\t\t\t1300 166 010\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst cards = [\n\t{\n\t\ttitle: \"Custom Content\",\n\t\tdescription:\n\t\t\t\"Custom developed with brand at heart that delivers real results, every time\"\n\t},\n\t{\n\t\ttitle: \"Apps & Web Marketing\",\n\t\tdescription:\n\t\t\t\"We are tech geeks with a creatve soul. Partnering with Ocitvo means you will never get anything off the shelf\"\n\t},\n\t{\n\t\ttitle: \"Learning Systems\",\n\t\tdescription:\n\t\t\t\"Brining back interactivity with learning, so beautiful is award winning.\"\n\t}\n];\n","import React from \"react\";\nimport \"../styles/Blog.scss\";\nimport img1 from \"./images/img1.png\";\nimport img2 from \"./images/img2.png\";\nimport img3 from \"./images/img3.png\";\nimport img4 from \"./images/img4.png\";\n\nconst Blog = () => {\n\treturn (\n\t\t<div className=\"background-style\">\n\t\t\t<div className=\"blog-style\">\n\t\t\t\t<div className=\"blogs\">- BLOGS -</div>\n\t\t\t</div>\n\t\t\t<div className=\"blog-images\">\n\t\t\t\t<img src={img1} alt=\"img1\" className=\"image-container\" />\n\t\t\t\t<img src={img2} alt=\"img2\" className=\"image-container\" />\n\t\t\t\t<img src={img3} alt=\"img3\" className=\"image-container\" />\n\t\t\t\t<img src={img4} alt=\"img4\" className=\"image-container\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Blog;\n","import React from \"react\";\nimport octivoImg from \"./images/octivoImg.png\";\nimport \"../styles/Clients.scss\";\n\nconst Clients = () => {\n\treturn (\n\t\t<div className=\"clients-bg\">\n\t\t\t<div className=\"clients\">\n\t\t\t\t<h1 className=\"clients-header\">\n\t\t\t\t\tWe partner with clients who, like us, raise the bar on what good content\n\t\t\t\t\tlooks like.\n\t\t\t\t</h1>\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"clients-image\"\n\t\t\t\t\tsrc=\"https://octivo.io/wp-content/uploads/2018/07/cotton-on-logo.svg\"\n\t\t\t\t\talt=\"cottonOn\"\n\t\t\t\t/>\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"clients-image\"\n\t\t\t\t\tsrc=\"https://octivo.io/wp-content/uploads/2018/07/typo-logo.svg\"\n\t\t\t\t\talt=\"cottonOn\"\n\t\t\t\t/>\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"clients-image\"\n\t\t\t\t\tsrc=\"https://octivo.io/wp-content/uploads/2018/07/grilld-logo.svg\"\n\t\t\t\t\talt=\"cottonOn\"\n\t\t\t\t/>\n\t\t\t\t<img className=\"clients-image\" src={octivoImg} alt=\"cottonOn\" />\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"clients-image\"\n\t\t\t\t\tsrc=\"https://octivo.io/wp-content/uploads/2018/07/telstra-logo.svg\"\n\t\t\t\t\talt=\"cottonOn\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Clients;\n","import React from \"react\";\nimport \"../styles/Footer.scss\";\n\nconst Footer = () => {\n\treturn (\n\t\t<div className=\"footer\">\n\t\t\t<img\n\t\t\t\tclassName=\"footer-octivo\"\n\t\t\t\tsrc=\"https://octivo.io/wp-content/uploads/2018/05/octivo-logo.svg\"\n\t\t\t\talt=\"Octivo\"\n\t\t\t/>\n\t\t\t<div className=\"footer-text\">\n\t\t\t\tStay up to date with the Octivo Magic... <br />\n\t\t\t\tFollow us on social media{\" \"}\n\t\t\t</div>\n\t\t\t<img\n\t\t\t\tclassName=\"footer-img\"\n\t\t\t\tsrc=\"https://octivo.io/wp-content/uploads/2018/10/icon-in-purp.svg\"\n\t\t\t\talt=\"LinkedIn\"\n\t\t\t/>\n\t\t\t<img\n\t\t\t\tclassName=\"footer-img\"\n\t\t\t\tsrc=\"https://octivo.io/wp-content/uploads/2018/10/icon-fb-purp.svg\"\n\t\t\t\talt=\"Facebook\"\n\t\t\t/>\n\t\t\t<img\n\t\t\t\tclassName=\"footer-img\"\n\t\t\t\tsrc=\"https://octivo.io/wp-content/uploads/2018/10/icon-ig-purp.svg\"\n\t\t\t\talt=\"Instagram\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Footer;\n","import React, { Fragment } from \"react\";\nimport Nav from \"./nav/Nav\";\nimport HomePage from \"./HomePage\";\nimport CardItems from \"./Card\";\nimport Blog from \"./Blog\";\nimport Clients from \"./Clients\";\nimport Footer from \"./Footer\";\n\nconst App = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Nav />\n\t\t\t<div style={{ width: \"100%\", background: \"black\", padding: \"56px\" }} />\n\t\t\t<HomePage />\n\t\t\t<div style={{ width: \"100%\", background: \"black\", padding: \"5px\" }} />\n\t\t\t<CardItems />\n\t\t\t<Blog />\n\t\t\t<Clients />\n\t\t\t<Footer />\n\t\t</Fragment>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}